#!/usr/bin/env bash

MAXRETRYS=5
TIMEOUT=60

#cp /autograder/submission/pa1.s /autograder/source/pa1.s

cd /autograder/source

start_emulator() {
    echo "Starting emualtor"
    NCPU=2
    MEM=1G

    qemu-system-aarch64 -smp ${NCPU} -m ${MEM} -M virt -cpu cortex-a57  \
                    -initrd ./emulator/initrd.img-4.9.0-4-arm64 \
                    -kernel ./emulator/vmlinuz-4.9.0-4-arm64 -append "root=/dev/sda2 console=ttyAMA0" \
                    -global virtio-blk-device.scsi=off \
                    -device virtio-scsi-device,id=scsi \
                    -drive file=./emulator/disk.qcow2,id=rootimg,cache=unsafe,if=none \
                    -device scsi-hd,drive=rootimg \
                    -device e1000,netdev=net0 \
                    -netdev user,id=net0,hostfwd=tcp::3101-:22 \
                    -nic user,model=virtio-net-pci \
                    -daemonize \
                    -display none
}

status=0

for try in $(seq 1 $MAXRETRYS); do
	echo "Try $try"
    nc -z localhost 3101
    if [ $? -ne 0 ]; then
        start_emulator
    fi

    # wait for port to open. this indicates service is running
    until nc -w 10 127.0.0.1 3101; do sleep 1; done

    # to make sure ssh has had a chance to start properly
    sleep 10

	echo "Running grading script"
    timeout -v $TIMEOUT python3 grade.py

    if [ $? -eq 0 ]; then
        echo "Grading succeeded."
		status=0
        break
    else
        echo "Grading failed. Retrying..."
		status=1
        sleep 5
    fi
done

# If grading still didn't work after max trys
if [ $status -eq 1 ]; then
	echo "Grading failed with unknown error."
	cp fail.json /autograder/results/results.json
fi


